<%
# Copyright (c) 2012-2013 Cardiff University, UK.
# Copyright (c) 2012-2013 The University of Manchester, UK.
#
# All rights reserved.
#
# Redistribution and use in sink and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of sink code must retain the above copyright notice,
#   this list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# * Neither the names of The University of Manchester nor Cardiff University nor
#   the names of its contributors may be used to endorse or promote products
#   derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# Authors
#     Abraham Nieva de la Hidalga
#
# Synopsis
#
# BioVeL Taverna Lite is a prototype interface provided to support the
# inspection and execution of workflows.
#
# For more details see http://www.biovel.eu
#
# BioVeL is funded by the European Commission 7th Framework Programme (FP7),
# through the grant agreement number 283359.
%>
<div id="edit_outputs" class="workflow_part" style="min-height:300px;
     			    height:auto !important;
                            height:300px; display:none;">
<% if @sinks.count>0 %>
<%= form_for :file_uploads,
      :url => {:controller => 'workflow_ports', :action => 'save_custom_outputs'},
      :html => {:multipart => true}, :disable_with => "Initialising Run" do |f| %>
  <%= hidden_field_tag "workflow_id", @workflow.id %>
  <%= hidden_field_tag "selected_tab", 'customise' %>
  <%= hidden_field_tag "selected_choice", 'inputs' %>
    <h3>
      This workflow has <%= @sinks.count %>
      <%= "Output".pluralize(@sinks.count)%>
    </h3>
      <p>
        <b>
          To customise an output:
        </b>
      <ol>
        <li>
          Select the output (click on the ckeck box)
        </li>
        <li>
          Provide a custom value and/or a file
        </li>
        <li>
          Select the output type (value or file)
        </li>
        <li>
          Repeat 1 - 3 for every output you want to customise
        </li>
        <li>
          Click "Save" to save customised outputs
        </li>
      </ol>
      <b>
        The custom values or files will be used when workflow ports are shown
      </b>
    </p>
   <% @custom_outputs.each do |item| %>
     <% portname = item.name %>
     <!-- Use sinks to get the original sample and descriptio values -->
     <% example_value = @sinks[portname].blank? ? "": @sinks[portname] -%>
     <h2> <%= label_tag portname %></h2>
     <dl class='list_any'>
       <dt class='list_title'>Description:</dt>
       <dd class='list_description'>
         <%=@sink_descriptions[portname].blank? ? "Not Provided" : simple_format(@sink_descriptions[portname]) -%>
       </dd>
       <dt class='list_title'>Example Value:</dt>
       <dd class='list_description'>
         <%= render :partial => 'partials/preview_and_detail',
           :locals => {:content_label => "cit_"+ portname, :content => example_value } %>
       </dd>
     </dl>
     <h3>
       Customise <%= label_tag portname %>
       <%= f.check_box  "customise_#{portname}", :checked => !item.id.nil? -%>
     </h3>
     <% example_value = !item.id.nil? ? item.sample_value : example_value -%>
     <!-- Use custom_inputs to load saved customisation values -->
     <dl class='list_any'>
       <dt class='list_title'>Enter Value:</dt>
       <dd class='list_description'>
         <%= f.text_area portname, :value => example_value, :rows => 1,
           :onclick => '$(this).select();', :style =>'width:95%' %>
       </dd>
       <dt class='list_title'>Select File:</dt>
       <dd class='list_description'>
         <%= f.file_field  "file_for_#{portname}" %>
         <%= item.sample_file.nil? ? "No sample" : "Current: " + item.sample_file -%>
       </dd>
       <dt class='list_title'>Output type:</dt>
       <dd class='list_description'>
         <%= f.select "display_for_#{portname}",
           options_for_select([["value (Default)", 2],
                                ["file", 3]], item.display_control_id) %>
       </dd>
       <!-- Add a preview that shows how data will be displayed according with
            the selected input control-->
       <!-- Create a control for displaying file contents on demand -->
       <!-- If file is present add a button link to it -->
     </dl>
   <% end %>
   <div title="Save Output Changes" alt="Save Output Changes" style="float:right; padding:10px;">
     <%= submit_tag 'Save' %>
   </div>
   <div title="Revert workflow annotation" alt="Revert workflow annotation" style="float:right; padding:10px;">
     <%= submit_tag 'Reset' %>
   </div>
   <div style="clear:both;">
   </div>
  <% end -%> <!--form-->
<% else %>  <!--if no outputs-->
  <p>
    <b> This workflow has no outputs </b>
  </p>
<% end %>
</div>

